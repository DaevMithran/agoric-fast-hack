Vagrant.configure("2") do |config|
    # Use Ubuntu 22.04 as the base box
    config.vm.box = "ubuntu/jammy64"
  
    # Set the VM's hostname
    config.vm.hostname = "agoric-dev-env"

    # Provisioning: Install dependencies, clone the repo, run the required steps
    config.vm.provision "shell", inline: <<-SHELL
      # Update and install necessary dependencies
      sudo apt-get update
      sudo apt-get install -y \
        git \
        gcc-10 \
        clang-10 \
        make \
        curl \
        build-essential \
        python3 \
        python3-pip \
        nvm \
        ca-certificates \
        gnupg \
        lsb-release
  
      # Install Go ^1.20.2
      curl -fsSL https://golang.org/dl/go1.20.2.linux-amd64.tar.gz -o go1.20.2.linux-amd64.tar.gz
      sudo tar -C /usr/local -xzf go1.20.2.linux-amd64.tar.gz
      echo "export PATH=\$PATH:/usr/local/go/bin" >> ~/.bashrc
      source ~/.bashrc
  
      # Install Node.js and NVM (use LTS version)
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
      source ~/.bashrc
      nvm install 18.12  # Install Node.js v18.12 (LTS)
      nvm use 18.12
  
      # Install Yarn
      npm install -g yarn@1.22.5
  
      # Clone the Agoric SDK repo
      git clone https://github.com/Agoric/agoric-sdk.git /home/vagrant/agoric-sdk
      cd /home/vagrant/agoric-sdk
  
      # Install dependencies and build Agoric SDK
      yarn install
      yarn build
  
      # Link the Agoric CLI to ~/bin/agoric
      yarn link-cli ~/bin/agoric
  
      # Set up the multichain-testing environment
      cd /home/vagrant/agoric-sdk/multichain-testing
      make clean setup
  
      # Create and start the Agoric demo app
      cd /home/vagrant/agoric-sdk
      yarn create @agoric/dapp demo
      cd demo
      yarn install
      yarn start:docker
      yarn docker:logs
    SHELL
  end
  